ChinainUS <- read.csv(file=paste(dataPath, "ChinaStockInUS.csv", sep="")) %>%
filter(Sector!="n/a")
SectorCount <- ChinainUS %>%
group_by(Sector) %>%
summarise(Count=n()) %>%
arrange(desc(Count)) %>%
mutate(Percentage=paste(round(100*Count/nrow(ChinainUS), 2), "%", sep=""))
kable(SectorCount)
piechart <- ggplot(data=ChinainUS, aes(x = factor(1), fill = Sector)) +
geom_bar(width = 1)+ coord_polar(theta = "y")
barchart <- SectorCount %>%
transform(Sector = reorder(Sector, Count)) %>%
ggplot(aes(x=Sector, y=Count, fill=Sector)) +
geom_bar(stat="identity") +
coord_flip() +
ylab("Number of Companies") +
theme(legend.position="none")
piechart
barchart
timeSeriesList <- list(ChinaTechInUS)
USETFPath <- paste(dataPath, "USTechETF/", sep="")
total <- 1
for (etf in list.files(USETFPath)) {
total <- total + 1
newTimeSeries <- getStockTimeSeries(paste(USETFPath, etf, sep=""), gsub("(history_|.csv)","",etf))
timeSeriesList[[total]] <- newTimeSeries
}
plotMultipleTimeSeries(timeSeriesList)
getStockTimeSeries <- function(filePath, title) {
stock <- read.csv(filePath) %>%
mutate(date=as.Date(Date), price=Close) %>%
filter(year(date) >= 2005) %>%
select(date, price)
return(mutate(stock, title=rep(title, nrow(stock))))
}
getStocksAverageTimeSeries <- function(folderPath, title) {
files <- list.files(folderPath)
stock <- read.csv(paste(folderPath, files[1], sep=""))
for (i in 2:length(files)) {
stock <- rbind(stock, read.csv(paste(folderPath, files[i], sep="")))
}
stock <- stock %>%
mutate(date=as.Date(Date)) %>%
group_by(date) %>%
summarise(price=mean(Close)) %>%
filter(year(date) >= 2005) %>%
select(date, price)
return(mutate(stock, title=rep(title, nrow(stock))))
}
plotSingleTimeSeries <- function(timeSeries) {
ggplot(timeSeries, aes(x=date, y=price)) +
geom_line(color="blue")
}
plotMultipleTimeSeries <- function(timeSeriesList) {
tbl <- timeSeriesList[[1]]
for (i in 2:length(timeSeriesList)) {
tbl <- rbind(tbl, timeSeriesList[[i]])
}
ggplot(tbl, aes(x=date, y=price, color=title)) +
geom_line()
}
ChinaTechInUS <- getStocksAverageTimeSeries(paste(dataPath, "ChinaTechInUS/",sep=""),"ChinaTechInUS")
ChinainUS%>%
filter(IPOyear!="n/a")%>%
group_by(IPOyear)%>%
summarise(Count=n())%>%
ggplot(aes(x=IPOyear,y=Count,group=1))+geom_line()+geom_point()+theme(axis.text.x = element_text(angle =45,hjust = 1))
ChinainUS%>%
filter(IPOyear!="n/a")%>%
ggplot(aes(IPOyear))+geom_bar(aes(fill=Exchange),position="stack")+
theme(legend.position="top",axis.text.x = element_text(angle =30,hjust = 1))
NYCH <- ChinainUS%>%
filter(Exchange=="NYSE")
Nsector <- NYCH%>%
group_by(Sector)%>%
summarise(Count=n())%>%
arrange(desc(Count))%>%
mutate(Percentage=paste(round(100*Count/nrow(NYCH), 2), "%", sep=""))
kable(Nsector)
library(DataComputing)
library(printr)
library(XML)
dataPath <- "~/Desktop/proj/data/"
QCH <- ChinainUS%>%
filter(Exchange=="NASDAQ")
Qsector <- QCH%>%
group_by(Sector)%>%
summarise(Count=n())%>%
arrange(desc(Count))%>%
mutate(Percentage=paste(round(100*Count/nrow(QCH), 2), "%", sep=""))
kable(Qsector)
NYSE <- read.csv(file=paste(dataPath, "NYSE.csv", sep=""))
NASDAQ <- read.csv(file=paste(dataPath, "NASDAQ.csv", sep=""))
AMEX <- read.csv(file=paste(dataPath, "AMEX.csv", sep=""))
for (i in 1:nrow(ChinainUS)){
if (ChinainUS$Symbol[i] %in% NYSE$Symbol){
ChinainUS$Exchange[i]="NYSE"
}else if(ChinainUS$Symbol[i] %in% NASDAQ$Symbol){
ChinainUS$Exchange[i]="NASDAQ"
}else if(ChinainUS$Symbol[i] %in% AMEX$Symbol){
ChinainUS$Exchange[i]="AMEX"
}else{
ChinainUS$Exchange[i]="Other"
}
}
ExchangeCount <- ChinainUS%>%
group_by(Exchange)%>%
summarise(Count=n())%>%
arrange(desc(Count))%>%
mutate(Percentage=paste(round(100*Count/nrow(ChinainUS), 2), "%", sep=""))
kable(ExchangeCount)
Ave=mean(ChinainUS$MarketCap)
SD=sd(ChinainUS$MarketCap)
for (i in 1:nrow(ChinainUS)){
if (ChinainUS$MarketCap[i]<2000000000){
ChinainUS$Mkt[i]="Small Cap"
}else if(ChinainUS$MarketCap[i]>10000000000){
ChinainUS$Mkt[i]="Large Cap"
}else {
ChinainUS$Mkt[i]="Mid Cap"
}
}
ChinainUS%>%
filter(Exchange!="AMEX")%>%
ggplot(aes(Mkt))+geom_bar(aes(fill=Exchange), position="dodge")
timeSeriesList <- list(ChinaTechInUS)
USETFPath <- paste(dataPath, "ChinaTechUSETF/", sep="")
total <- 1
for (etf in list.files(USETFPath)) {
total <- total + 1
newTimeSeries <- getStockTimeSeries(paste(USETFPath, etf, sep=""), gsub("(history_|.csv)","",etf))
timeSeriesList[[total]] <- newTimeSeries
}
plotMultipleTimeSeries(timeSeriesList)
url <- "http://etfdb.com/etfdb-category/technology-equities/"
doc <- htmlParse(url)
tables <- readHTMLTable(doc)
Top10ETF <- head(tables[[1]]$Symbol, 5)
downloadSymbols(Top10ETF, "USTechETF")
dataPath <- "~/Desktop/proj/data/"
downloadSymbols <- function(symbolList, pathID) {
dir.create(paste(dataPath, pathID, sep=""));
for (s in symbolList) {
url <- paste("http://finance.yahoo.com/q/hp?s=", s, sep="");
doc <- htmlParse(url);
if (is.null(doc) == FALSE) {
links <- xpathSApply(doc, "//a/@href");
links <- links[grepl("csv", links)];
if (length(links) > 0) {
download.file(links[[1]], destfile=paste(dataPath, pathID, "/", "history_", s, ".csv",sep=""));
}
}
}
}
url <- "http://etfdb.com/etfdb-category/technology-equities/"
doc <- htmlParse(url)
tables <- readHTMLTable(doc)
Top10ETF <- head(tables[[1]]$Symbol, 5)
downloadSymbols(Top10ETF, "USTechETF")
Top10ETF
list()
a <- list()
a
